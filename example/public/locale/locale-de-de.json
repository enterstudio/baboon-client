{
    "EXAMPLE": "Beispiel",
    "INPUT_PLACEHOLDER": "Text eingeben...",
    "DEMO": "Demo",
    "ALERT_INTRO": "Baboon liefert einen Service mit einer Directive zum Anzeigen von Informationen für den User mit. Dafür wird eine Box temporär in der UI eingeblendet. Über die Methoden und Parameter des Services lassen sich Inhalt und Aussehen der Alarmbox steuern.",
    "ALERT_METHODS": "Methoden",
    "ALERT_INFO": "info: Liefert einfachen Hinweis zur Information des Benutzers.",
    "ALERT_SUCCESS": "success: Liefert eine Meldung für den erfolgreichen Abschluß eines Bearbeitungsvorgangs.",
    "ALERT_WARN": "warning: Liefert eine auffällige Warnmeldung.",
    "ALERT_DANGER": "danger: Liefert eine Alarmmeldung bei schwereren Fehlern.",
    "ALERT_CLOSE": "close: Blendet die Messagebox wieder aus.",
    "ALERT_MESSAGE": "Der Parameter Message enthält die anzuzeigende Nachricht.",
    "API_LINK_DESCRIPTION": "Für weitere Details besuchen Sie bitte unsere",
    "API_LINK_TEXT": "API Referenz",
    "RESET_TEXT": "Die bbc-reset Directive fügt dem Eingabefeld eine Bild hinzu, um das Model und die Anzeige zurückzusetzen. Die Directive kann nur auf die folgenden input Typen angewendet werden:",
    "SORT_TEXT": "Die bbc-sort Directive fügt einer Tabelle eine Spalte für eine benutzerdefinierte oder serverseitige Sortierung hinzu.",
    "SORT_CITY": "Stadt",
    "SORT_COUNTRY": "Land",
    "RADIO_TEXT": "Die bbc-radio Directive erzeugt ein RadioButton, der ein einheitliches Ausehen in allen Browsern besitzt.",
    "CACHE_INTRO": "Baboon bietet mit der Cache-Factory eine einfache Variante um Objecte im Speicher abzulegen.",
    "PAGER_TEXT": "Die bbc-pager Directive erzeugt einen Pager für benutzerdefiniertes oder serverseitiges Paging.",
    "SESSION_INTRO": "Sessions werden in Baboon vom Server mit den Parametern aus der config.js erzeugt und verwaltet. Das Modul bbc.session beinhaltet einen Service, welcher mit der Serversession interagieren kann. Dies kann genutzt werden um den Server Aktivität zu melden und Daten vom Client aus in der Session zu speichern.",
    "SESSION_LIST_HEADER": "Methoden des Sessionservices",
    "SESSION_LIST_1": "Aktivität der Session melden",
    "SESSION_LIST_2": "Letzte Aktivität abfragen",
    "SESSION_LIST_3": "Daten in der Session speichern",
    "SESSION_LIST_4": "Daten aus der Session laden",
    "SESSION_LIST_5": "Daten aus der Session löschen",
    "SESSION_SETACTIVITY_HEADER": "Meldet neue Aktivität an den Server",
    "SESSION_SETACTIVITY_TEXT": "Aktivität an den Server melden. Der Server prüft die Session auf Inaktivität und Maximale Lebensdauer. Ist eine dieser Zeiten überschritten, sendet der Server dem Client im Callback einen Fehler. Ist die Session ok, verwendet der Server die aktuelle Serverzeit und speichert diese als letzte Aktivität.",
    "SESSION_GETLASTACTIVITY_HEADER": "Letzte Aktivität der Session abfragen",
    "SESSION_GETLASTACTIVITY_TEXT": "Die letzte Aktivität der Session abfragen. Dabei wird die Session nicht erneut überprüft und keine neue Aktivität gesetzt. Es wird ein in ISO formatierter Datumsstring zurück geliefert.",
    "SESSION_SETDATA_HEADER": "Daten im Session-Container speichern",
    "SESSION_SETDATA_TEXT": "Sie können über den Session-Service vom Client aus Daten in der Serversession speichern. Baboon verwendet zum speichern in der Session den Container data. Alle Daten vom Client werden innerhalb des Containers session.data abgelegt und können auch nur aus diesem gelesen und gelöscht werden. Speichern außerhalb des Containers ist nicht möglich. Ist der Key in der Session bereits vergeben, wird der Wert mit dem neuen Wert überschrieben. Beachten Sie daher den Aufbau Ihrer Namen für Keys und verwenden Sie wenn möglich einen Namespace.",
    "SESSION_GETDATA_HEADER": "Daten aus dem Session-Container lesen",
    "SESSION_GETDATA_TEXT": "Sie können über den Session-Service vom Client aus Daten aus der Serversession auslesen. Verwenden Sie dazu den Key unter welchem Sie die Daten gespeichert haben. Sie können Daten, die außerhalb des Containers liegen, nicht abfragen.",
    "SESSION_GETDATA_TEXT2": "Wenn Sie keinen Key angeben, wird Ihnen das gesamte Session Container Objekt zurück geliefert.",
    "SESSION_DELETEDATA_HEADER": "Daten aus dem Session-Container löschen",
    "SESSION_DELETEDATA_TEXT": "Sie können über den Session-Service vom Client aus Daten aus der Serversession löschen. Verwenden Sie dazu den Key unter welchem Sie die Daten gespeichert haben. Sie können Daten, die außerhalb des Containers liegen, nicht löschen.",
    "SESSION_DELETEDATA_TEXT2": "Wenn Sie keinen Key angeben, wird das gesamte Session Container Objekt gelöscht.",
    "MARKDOWN_TEXT": "Konvertiert markdown zu HTML.",
    "CHECKBOX_INTRO": "Mit der Checkbox-Directive liefert Baboon eine Checkbox die in allen unterstützten Browsern gleich aussieht und das gleiche Verhalten aufweist.",
    "DISABLED": "Ich bin disabled!",
    "ACTIVATED": "Ich bin aktiviert!",
    "DEACTIVATED": "Ich bin deaktiviert!",
    "DATEPICKER_INTRO": "Die Datepicker-Directive ist eine Kalenderkomponente. Durch sie lassen sich in ein Inputfeld auf einfache weise valide Datumswerte eintragen. Die Werte können sowohl inline als auch über das Kalenderpopup eingetragen werden.",
    "DATE": "Datum",
    "DATEPICKER_WRONG_FORMAT": "Das Datum hat ein falsches Format.",
    "DATEPICKER_REQUIRED": "Das Datum muss angegeben werden.",
    "DATEPICKER_WRONG_DATE": "Dieses Datum existiert nicht.",
    "FLOAT_INTRO": "Baboon liefert eine Directive welche den eingegebenen String in eine Number konvertiert und rundet. Kann der eingegebene String nicht in eine Number konvertiert werden wird Undefined zurückgeliefert. Ein Dezimalkomma wird durch einen Dezimalpunkt ersetzt.",
    "FLOAT_CHANGE_NUMBER": "Bitte ändern Sie die Zahl.",
    "FLOAT_PARSED_VALUE": "Geparster Wert:",
    "FLOAT_INITIAL_TYPE": "Initialer Datentyp:",
    "FLOAT_CURRENT_TYPE": "Aktueller Datentyp:",
    "MODAL_TEXT": "Das Modul bbc.modal beinhaltet einen Service, welcher Popup- und Messageboxen anzeigen kann. Dieser Service basiert auf der Modal-Directive von ",
    "MODAL_LIST_HEADER": "Methoden des Modalservice",
    "MODAL_LIST_OPEN": "Öffnet ein modales Fenster",
    "MODAL_LIST_CANCEL": "Schließt das modale Fenster",
    "MODAL_LIST_UPDATE": "Aktualisiert eine Nachricht in einem geöffneten modalen Fenster",
    "MODAL_OPEN_TEXT": "Die Methode open öffnet ein modales Fenster und setzt die Eigenschaften, wie z.B. Titelleiste, Nachrichtentext und welche Schaltflächen angezeigt werden sollen.",
    "MODAL_CANCEL_TEXT": "Die Methode cancel schließt ein modales Fenster.",
    "MODAL_UPDATE_TEXT": "Die Methode update aktualisiert die Nachricht in einem geöffneten modalen Fenster.",
    "MODAL_YES_NO_TEXT": "Ja/Nein Popup",
    "MODAL_OK_CLOSE_TEXT": "Ok/Schließen Popup",
    "MODAL_OK_TEXT": "Modal Popup",
    "MODAL_CANCEL_DEMO_TEXT": "Eine Sekunde nach dem Öffnen des Popups wird es automatisch geschlossen.",
    "MODAL_UPDATE_DEMO_TEXT": "Zwei Sekunden nach dem Öffnen des Popups wird die Nachricht aktualisiert.",
    "MODAL_HEADLINE": "Titleleiste",
    "MODAL_MESSAGE_BODY": "Der Nachrichtentext.",
    "MODAL_YES_TEXT": "Ja",
    "MODAL_NO_TEXT": "Nein",
    "MODAL_CLOSE_TEXT": "Schließen",
    "MODAL_CLICKED_TEXT": "wurde geklickt",
    "MODAL_UPDATED_MESSAGE": "Die aktualisierte Nachricht steht nun zur Verfügung.",
    "TRANSPORT_INTRO": "Baboon verwendet für den Transport eine einheitliche Schnittstelle die sowohl HTTP/HTTPS als auch Sockets bedient, wobei die Socketverbindungen als default verwendet werden. Beim deaktivieren der Sockets werden die Anfragen automatisch auf HTTP/HTTPS umgeschaltet.",
    "TRANSPORT_LIST_HEADER": "Methoden des Transportservices",
    "TRANSPORT_LIST_1": "Löst eine Anfrage über Socket oder HTTP/HTTPS an den Server aus",
    "TRANSPORT_LIST_2": "Leitet Socket-Events zum Scope weiter",
    "TRANSPORT_LIST_3": "Wartet auf ein Socket-Event vom Server",
    "TRANSPORT_LIST_4": "Fügt einen Listener zum Socket hinzu",
    "TRANSPORT_LIST_5": "Löscht einen Listener vom Socket",
    "NAVIGATION_DIRECTIVE_INTRO": "Die Navigationsdirektive in Baboon dient zur Darstellung der Navigation. Dabei kann die Ausrichtung horizontal oder vertical erfolgen.",
    "NAVIGATION_SERVICE_INTRO": "Der Navigationsservice in Baboon liefert die Navigationselemente der Haupt- oder einer Unternavigation als Liste oder Baum zurück. Durch Parameter können die Navigationselemente gefiltert werden.",
    "NAVIGATION_LIST_HEADER": "Methoden des Navigationsservices",
    "NAVIGATION_LIST_1": "Liefert die aktuelle Applikation (app) zurück",
    "NAVIGATION_LIST_2": "Liefert die aktuelle Route der Applikation zurück",
    "NAVIGATION_LIST_3": "Liefert die aktuelle Navigation als Baum",
    "NAVIGATION_LIST_4": "Liefert die aktuelle Navigation als Liste",
    "NAVIGATION_LIST_5": "Liefert die Toplevels der Navigation",
    "NAVIGATION_LIST_6": "Liefert alle Unterlinks als Baum einer Toplevel",
    "NAVIGATION_LIST_7": "Liefert alle Unterlinks als Liste einer Toplevel"
}