{
    "EXAMPLE": "Beispiel",
    "INPUT_PLACEHOLDER": "Text eingeben...",
    "API_LINK_DESCRIPTION": "Für weitere Details besuchen Sie bitte unsere",
    "API_LINK_TEXT": "API Referenz",
    "RESET_TEXT": "Die bbc-reset Directive fügt dem Eingabefeld eine Bild hinzu, um das Model und die Anzeige zurückzusetzen. Die Directive kann nur auf die folgenden input Typen angewendet werden:",
    "SORT_TEXT": "Die bbc-sort Directive fügt einer Tabelle eine Spalte für eine benutzerdefinierte oder serverseitige Sortierung hinzu.",
    "SORT_CITY": "Stadt",
    "SORT_COUNTRY": "Land",
    "SESSION_INTRO": "Sessions werden in Baboon vom Server mit den Parametern aus der config.js erzeugt und verwaltet. Das Modul bbc.session beinhaltet einen Service, welcher mit der Serversession interagieren kann. Dies kann genutzt werden um den Server Aktivität zu melden und Daten vom Client aus in der Session zu speichern.",
    "SESSION_LIST_HEADER": "Methoden des Sessionservices",
    "SESSION_LIST_1": "Aktivität der Session melden",
    "SESSION_LIST_2": "Letzte Aktivität abfragen",
    "SESSION_LIST_3": "Daten in der Session speichern",
    "SESSION_LIST_4": "Daten aus der Session laden",
    "SESSION_LIST_5": "Daten aus der Session löschen",
    "SESSION_SETACTIVITY_HEADER": "Meldet neue Aktivität an den Server",
    "SESSION_SETACTIVITY_TEXT": "Eine Singlepage Anwendung wird einmal an den Client ausgeliefert und erzeugt keinen neuen Request. Das ist für die Session ein Problem, da zwangsläufig die Inaktivitätszeit überschritten wird. Um das zu vermeiden, meldet der Client, wie im Beispiel, bei jeder Änderung der Route eine Aktivität an den Server. Der Server prüft die Session und meldet einen Fehler, wenn die Inaktivitätszeit oder die Maximale Laufzeit der Session überschritten wurde.",
    "SESSION_GETLASTACTIVITY_HEADER": "Letzte Aktivität der Session abfragen",
    "SESSION_GETLASTACTIVITY_TEXT": "Die letzte Aktivität der Session abfragen. Dabei wird die Session nicht erneut überprüft und keine neue Aktivität gesetzt. Es wird ein in ISO formatierter Datumsstring zurück geliefert.",
    "SESSION_SETDATA_HEADER": "Daten im Session-Container speichern",
    "SESSION_SETDATA_TEXT": "Sie können über den Session-Service vom Client aus Daten in der Serversession speichern. Baboon verwendet zum speichern in der Session den Container data. Alle Daten vom Client werden innerhalb des Containers session.data abgelegt und können auch nur aus diesem gelesen und gelöscht werden. Speichern außerhalb des Containers ist nicht möglich. Ist der Key in der Session bereits vergeben, wird der Wert mit dem neuen Wert überschrieben. Beachten Sie daher den Aufbau Ihrer Namen für Keys und verwenden Sie wenn möglich einen Namespace.",
    "SESSION_GETDATA_HEADER": "Daten aus dem Session-Container lesen",
    "SESSION_GETDATA_TEXT": "Sie können über den Session-Service vom Client aus Daten aus der Serversession auslesen. Verwenden Sie dazu den Key unter welchem Sie die Daten gespeichert haben. Sie können Daten, die außerhalb des Containers liegen, nicht abfragen.",
    "SESSION_GETDATA_TEXT2": "Wenn Sie keinen Key angeben, wird Ihnen das gesamte Session Container Objekt zurück geliefert.",
    "SESSION_DELETEDATA_HEADER": "Daten aus dem Session-Container löschen",
    "SESSION_DELETEDATA_TEXT": "Sie können über den Session-Service vom Client aus Daten aus der Serversession löschen. Verwenden Sie dazu den Key unter welchem Sie die Daten gespeichert haben. Sie können Daten, die außerhalb des Containers liegen, nicht löschen.",
    "SESSION_DELETEDATA_TEXT2": "Wenn Sie keinen Key angeben, wird das gesamte Session Container Objekt gelöscht."

}