{
    "EXAMPLE": "Example",
    "INPUT_PLACEHOLDER": "Add any text...",
    "DEMO": "Demo",
    "ALERT_INTRO": "Baboon provides a service with a directive to display information to the user. For this, a box will be temporarily displayed in the UI. On the methods and parameters of the service can be controlled content and appearance of the alarm box.",
    "ALERT_METHODS": "Methods",
    "ALERT_INFO": "info: Provides a simple note to the information of the user.",
    "ALERT_SUCCESS": "success: Delivers a message for the successful completion of a process.",
    "ALERT_WARN": "warning: Delivers a striking warning.",
    "ALERT_DANGER": "danger: Provides a alarm message for heavier errors.",
    "ALERT_CLOSE": "close: Hides the message box again.",
    "ALERT_MESSAGE": "The message parameter contains the message to be displayed.",
    "API_LINK_DESCRIPTION": "For more Details please check out our",
    "API_LINK_TEXT": "api reference",
    "RESET_TEXT": "The bbc-reset directive adds an icon to reset the model of an input field and also empties the view value of the input field. The directive can only be applied to the following input types:",
    "SORT_TEXT": "The bbc sort directive adds a column for custom or server-side sorting to a table.",
    "SORT_CITY": "City",
    "SORT_COUNTRY": "Country",
    "RADIO_TEXT": "The bbc-radio directive creates a radio button with the same look and feel on all browsers.",
    "CACHE_INTRO": "With the cache factory offers baboon is a simple variant to store objects in the memory.",
    "PAGER_TEXT": "The bbc pager directive adds a pager for custom or server-side paging.",
    "SESSION_INTRO": "Sessions are produced in Baboon from the server and managed with the parameters from the config.js. The module bbc.session includes a service that can interact on the server with the session. Which can be used to report to the server activity and to store data from the client in the session.",
    "SESSION_LIST_HEADER": "Methods of the Session Services",
    "SESSION_LIST_1": "Report activity session",
    "SESSION_LIST_2": "Check Recent Activity",
    "SESSION_LIST_3": "Store data in the session",
    "SESSION_LIST_4": "Load data from the session",
    "SESSION_LIST_5": "Delete data from the session",
    "SESSION_SETACTIVITY_HEADER": "Reports new activity to the server",
    "SESSION_SETACTIVITY_TEXT": "A single page application is once delivered to the client, and does not generate a new request. This is a problem for the session, as inevitably the inactivity time is exceeded. To avoid this, the client will report as in the example at each change of the route an activity to the server. The server checks the session and reports an error, if the elapsed time or the maximum duration of the session has been exceeded.",
    "SESSION_GETLASTACTIVITY_HEADER": "Check Latest activity session",
    "SESSION_GETLASTACTIVITY_TEXT": "The last activity of the session to query. The session will not be checked again and set no new activity. It is returned a formatted in ISO date string.",
    "SESSION_SETDATA_HEADER": "Store data in the Session Container",
    "SESSION_SETDATA_TEXT": "You can save on the session service from the client data in the server session. Baboon used to store the container in the session data. All data from the client are stored within the container session.data and can be read and deleted only from this. Is the Key in the session already exists, the old value is overwritten.",
    "SESSION_GETDATA_HEADER": "Read data from the session container",
    "SESSION_GETDATA_TEXT": "You can read out data from the server session using the session service by the client. Use the key with which you have the data stored. You can import data that are outside of the container, do not read.",
    "SESSION_GETDATA_TEXT2": "If you do not enter a key, you the entire session container object is returned.",
    "SESSION_DELETEDATA_HEADER": "Delete data from the Session Container",
    "SESSION_DELETEDATA_TEXT": "The session service can delete from the client data from the server session. Use the key under which you have saved the data. You can import data that are outside of the container, do not delete.",
    "SESSION_DELETEDATA_TEXT2": "If you do not enter a key, the entire session container object is deleted."
}